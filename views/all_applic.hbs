<h1 class="applications-title">Все заявки</h1>

<div class="search-container">
  <div class="input-field">
    <input id="search" type="text" class="validate">
    <label for="search">Поиск заявок</label>
    <i class="material-icons search-icon">search</i>
  </div>
</div>

<div class="summary-card">
  <h2>Суммарная стоимость заявок:</h2>
  <div class="summary-items">
    <div class="summary-item">
      <span class="status-indicator new"></span>
      <span>Новые:</span>
      <span class="amount">{{summary.new}} ₽</span>
    </div>
    <div class="summary-item">
      <span class="status-indicator processing"></span>
      <span>В обработке:</span>
      <span class="amount">{{summary.processing}} ₽</span>
    </div>
    <div class="summary-item">
      <span class="status-indicator completed"></span>
      <span>Выполнено:</span>
      <span class="amount">{{summary.completed}} ₽</span>
    </div>
    <div class="summary-item">
      <span class="status-indicator cancelled"></span>
      <span>Отменено:</span>
      <span class="amount">{{summary.cancelled}} ₽</span>
    </div>
    <div class="summary-total">
      <span>Итого:</span>
      <span class="total-amount">{{summary.total}} ₽</span>
    </div>
  </div>
</div>

<div class="table-responsive">
  <table class="highlight striped sortable">
    <thead>
      <tr>
        <th class="sortable-header" data-column="name">Название <i class="material-icons sort-icon">unfold_more</i></th>
        <th class="sortable-header" data-column="quantity">Количество <i class="material-icons sort-icon">unfold_more</i></th>
        <th class="sortable-header" data-column="price">Цена <i class="material-icons sort-icon">unfold_more</i></th>
        <th>Ссылка</th>
        <th>Желаемая дата</th>
        <th>ID пользователя</th>
        <th class="sortable-header" data-column="status">Статус <i class="material-icons sort-icon">unfold_more</i></th>
        <th>Дата поставки</th>
        <th>Комментарии</th>
        <th>Действия</th>
      </tr>
    </thead>
    <tbody>
      {{#each requests}}
      <tr>
        <td>{{item_name}}</td>
        <td>{{count}}</td>
        <td>{{price}} ₽</td>
        <td>
          {{#if link}}
            <a href="{{link}}" target="_blank" class="btn-flat">Ссылка</a>
          {{else}}
            —
          {{/if}}
        </td>
        <td>{{desired_date}}</td>
        <td>
          <a href="/users/{{user_id}}" class="user-id-link">#{{user_id}}</a>
        </td>
        <td>
          <span class="status-badge {{lowercase status}}">{{status}}</span>
        </td>
        <td>{{delivery_date}}</td>
        <td>
          <a href="#" class="btn-floating btn-small waves-effect waves-light blue" title="Комментарий">
            <i class="material-icons">comment</i>
          </a>
        </td>
        <td>
          <a href="/edit?id={{id}}" class="btn-floating btn-small waves-effect waves-light grey" title="Редактировать">
            <i class="material-icons">edit</i>
          </a>
        </td>
      </tr>
      {{/each}}
    </tbody>
  </table>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    M.AutoInit();

    function sortTable(columnIndex, direction) {
      const table = document.querySelector('.sortable');
      const tbody = table.querySelector('tbody');
      const rows = Array.from(tbody.querySelectorAll('tr'));

      rows.sort((a, b) => {
        const aText = a.cells[columnIndex].textContent.trim();
        const bText = b.cells[columnIndex].textContent.trim();

        if (columnIndex === 1 || columnIndex === 2) {
          const aNum = parseFloat(aText.replace(/[^\d.]/g, ''));
          const bNum = parseFloat(bText.replace(/[^\d.]/g, ''));
          return direction === 'asc' ? aNum - bNum : bNum - aNum;
        }

        return direction === 'asc'
          ? aText.localeCompare(bText)
          : bText.localeCompare(aText);
      });

      while (tbody.firstChild) {
        tbody.removeChild(tbody.firstChild);
      }

      rows.forEach(row => tbody.appendChild(row));
    }


    document.querySelectorAll('.sortable-header').forEach(header => {
      header.addEventListener('click', function () {
        const columnIndex = Array.from(this.parentNode.children).indexOf(this);
        const isAsc = this.classList.contains('asc');
        const direction = isAsc ? 'desc' : 'asc';

        document.querySelectorAll('.sortable-header').forEach(h => {
          h.classList.remove('asc', 'desc');
          h.querySelector('.sort-icon').textContent = 'unfold_more';
        });

        this.classList.add(direction);
        this.querySelector('.sort-icon').textContent = direction === 'asc' ? 'arrow_downward' : 'arrow_upward';

        sortTable(columnIndex, direction);
      });
    });
  });
</script>
