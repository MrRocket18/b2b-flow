{{!-- views/all_applic.hbs --}}

<div class="orders-page-container">
  <h1 class="orders-page-title">Все заказы</h1>

  <!-- Сводная таблица -->
  <div class="card-panel white lighten-1 summary-container">
    <table class="striped centered highlight summary-table">
      <thead>
        <tr>
          <th>Новые</th>
          <th>В обработке</th>
          <th>Выполнено</th>
          <th>Отменено</th>
          <th>Итого</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>{{summary.new}}</td>
          <td>{{summary.processing}}</td>
          <td>{{summary.completed}}</td>
          <td>{{summary.cancelled}}</td>
          <td>{{summary.total}}</td>
        </tr>
      </tbody>
    </table>
  </div>

  <!-- Фильтры -->
  <div class="row filter-bar">
    <div class="input-field col s6 m6">
      <input type="text" id="search-input" placeholder="Поиск по ID, названию, пользователю, дате">
    </div>
    <div class="input-field col s6 m6">
      <select id="status-filter">
        <option value="">Все статусы</option>
        <option value= 0>На рассмотрении</option>
        <option value= 1>Закупаем</option>
        <option value= 2>Ждём поставку</option>
        <option value= 3>Готово к получению</option>
        <option value= 4>Получен</option>
      </select>
      <label>Фильтр по статусу</label>
    </div>
  </div>

  <!-- Основная таблица -->
  <!-- Основная таблица -->
<div class="card-panel white lighten-1 orders-container">
  <table class="striped highlight responsive-table" id="orders-table">
    <thead>
      <tr>
        <th class="sortable" data-sort="item_name">Название</th>
        <th class="sortable" data-sort="count">Кол-во</th>
        <th class="sortable" data-sort="price">Цена</th>
        <th class="sortable" data-sort="desired_date">Желаемая дата</th>
        <th class="sortable">Предполагаемая дата</th>
        <th>ID пользователя</th>
        <th class="sortable" data-sort="status">Статус</th>
        <th>Комментарий</th>
        <th></th>
      </tr>
    </thead>
    <tbody id="orders-body">
      {{#each requests}}
      <tr>
        <form method="POST" action="/admin/update/{{this.ID}}">
          <td><a href="{{this.link}}" target="_blank">{{this.item_name}}</a></td>
          <td>{{this.count}}</td>
          <td>{{this.price}}</td>
          <td>{{this.desired_date}}</td>
          <td>
            <input type="date" id="delivery_date" name="delivery_date" value="{{this.delivery_date}}">
            {{this.delivery_date}}
          </td>
          <td>{{this.user_fullname}}</td>
          <td>
            <select id = "status" name="status" class="browser-default">
              <option value= 0 {{#if (isEqual this.status 0)}}selected{{/if}}>На рассмотрении</option>
              <option value= 1 {{#if (isEqual this.status 1)}}selected{{/if}}>Закупаем</option>
              <option value= 2 {{#if (isEqual this.status 2)}}selected{{/if}}>Ждём поставку</option>
              <option value= 3 {{#if (isEqual this.status 3)}}selected{{/if}}>Готово к получению</option>
              <option value= 4 {{#if (isEqual this.status 4)}}selected{{/if}}>Получен</option>
            </select>
          </td>
          <td>
            <input type="text" name="comment" value="{{this.comment}}">
          </td>
          <td>
            <button type="submit" class="btn-flat tooltipped" data-tooltip="Сохранить изменения">
              <i class="material-icons green-text">check</i>
            </button>
          </td>
        </form>
      </tr>
      {{/each}}
    </tbody>
  </table>
</div>


<!-- MODAL -->
<div id="status-modal" class="modal">
  <form method="POST" id="status-form">
    <div class="modal-content">
      <h5>Изменить статус заявки</h5>
      <div class="input-field">
        <select name="new_status" id="new-status-select" required>
          <option value="" disabled selected>Выберите статус</option>
          <option value="На рассмотрении">На рассмотрении</option>
          <option value="Закупаем">Закупаем</option>
          <option value="Ждём поставку">Ждём поставку</option>
          <option value="Готово к получению">Готово к получению</option>
          <option value="Получен">Получен</option>
        </select>
        <label>Новый статус</label>
      </div>
    </div>
    <div class="modal-footer">
      <button type="submit" class="modal-close btn green">Сохранить</button>
      <a class="modal-close btn-flat">Отмена</a>
    </div>
  </form>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const elems = document.querySelectorAll('.modal');
    M.Modal.init(elems);

    const selects = document.querySelectorAll('select');
    M.FormSelect.init(selects);

    const modal = M.Modal.getInstance(document.getElementById('status-modal'));
    const form = document.getElementById('status-form');

    document.querySelectorAll('.change-status-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        const id = btn.dataset.id;
        const currentStatus = btn.dataset.status;
        form.action = `/update-status/${id}`;
        const select = document.getElementById('new-status-select');
        [...select.options].forEach(opt => {
          opt.selected = (opt.value === currentStatus);
        });
        M.FormSelect.init(select);
        modal.open();
      });
    });

    const searchInput = document.getElementById('search-input');
    const statusFilter = document.getElementById('status-filter');
    
    const rows = Array.from(document.querySelectorAll('#orders-body tr'));
    let sortField = null;
    let sortAsc = true;

    function applyFilters() {
      const term = searchInput?.value.toLowerCase() || '';
      const selectedStatus = statusFilter?.value || '';

      rows.forEach(row => {
        const text = row.innerText.toLowerCase();
        const matchesSearch = term === '' || text.includes(term);
        const matchesStatus = selectedStatus === '' || row.cells[6]?.querySelector('select').value === selectedStatus;
        row.style.display = (matchesSearch && matchesStatus) ? '' : 'none';
      });
    }

    function sortTable(field) {
      const indexMap = {
        item_name: 0,
        count: 1,
        price: 2,
        desired_date: 3,
        status: 5
      };
      const colIndex = indexMap[field];
      const sortedRows = [...rows].sort((a, b) => {
        const aText = a.cells[colIndex].innerText.trim();
        const bText = b.cells[colIndex].innerText.trim();
        const aNum = parseFloat(aText.replace(',', '.'));
        const bNum = parseFloat(bText.replace(',', '.'));
        if (!isNaN(aNum) && !isNaN(bNum)) {
          return sortAsc ? aNum - bNum : bNum - aNum;
        }
        return sortAsc ? aText.localeCompare(bText) : bText.localeCompare(aText);
      });

      const tbody = document.getElementById('orders-body');
      tbody.innerHTML = '';
      sortedRows.forEach(row => tbody.appendChild(row));
    }

    document.querySelectorAll('.sortable').forEach(th => {
      th.addEventListener('click', () => {
        const field = th.getAttribute('data-sort');
        sortAsc = sortField === field ? !sortAsc : true;
        sortField = field;
        sortTable(field);
      });
    });

    if (searchInput) searchInput.addEventListener('input', applyFilters);
    if (statusFilter) statusFilter.addEventListener('change', applyFilters);
  });
</script>